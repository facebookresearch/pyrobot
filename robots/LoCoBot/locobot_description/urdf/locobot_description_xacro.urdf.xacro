<?xml version="1.0" ?>

<robot name="locobot" xmlns:xacro="http://ros.org/wiki/xacro">

    <!-- Included components -->
    <xacro:include filename="$(find locobot_description)/urdf/base.urdf.xacro" />
    <xacro:include filename="$(find locobot_description)/urdf/wheel.urdf.xacro" />
    <xacro:include filename="$(find locobot_description)/urdf/caster.urdf.xacro" />
    <xacro:include filename="$(find locobot_description)/urdf/cliff.urdf.xacro" />
    <xacro:include filename="$(find locobot_description)/urdf/arm.urdf.xacro" />
    <xacro:include filename="$(find locobot_description)/urdf/cam.urdf.xacro" />

    <!-- Constants -->
    <xacro:property name="PI" value="3.1415926535897931" />
    <xacro:property name="footprint_name" value="base_footprint" /> 
    <xacro:property name="base_link_name" value="base_link" />
    <xacro:property name="wheel_sep_x" value="0.00" />
    <xacro:property name="wheel_sep_y" value="0.115" />
    <xacro:property name="wheel_sep_z" value="0.0250" />

    <!-- Kobuki -->
    <link name="${footprint_name}"/>
    <!--
        Base link is set at the bottom of the base mould.
        This is done to be compatible with the way base link
        was configured for turtlebot 1. Refer to

        https://github.com/turtlebot/turtlebot/issues/40

        To put the base link at the more oft used wheel
        axis, set the z-distance from the base_footprint
        to 0.352.
        -->
    <locobot_base parent="${footprint_name}">
        <origin rpy="0 0 0" xyz="0 0 0.0102"/>
    </locobot_base>

    <locobot_wheel name="wheel_left" parent="${base_link_name}">
        <origin
        xyz="${wheel_sep_x} ${wheel_sep_y} ${wheel_sep_z}"
        rpy="${-PI/2} 0 0"
        />
    </locobot_wheel>
    <locobot_wheel name="wheel_right" parent="${base_link_name}">
        <origin
        xyz="${wheel_sep_x} ${-wheel_sep_y} ${wheel_sep_z}"
        rpy="${-PI/2} 0 0"
        />
    </locobot_wheel>
    <locobot_caster name="front" parent="${base_link_name}">
        <origin rpy="-1.57079632679 0 0" xyz="0.115 0.0 0.007"/>
    </locobot_caster>
    <locobot_caster name="back" parent="${base_link_name}">
        <origin rpy="-1.57079632679 0 0" xyz="-0.135 0.0 0.009"/>
    </locobot_caster>

    <!-- Kobuki's sensors -->
    <joint name="gyro_joint" type="fixed">
        <axis xyz="0 1 0"/>
        <origin rpy="0 0 0" xyz="0.056 0.062 0.0202"/>
        <parent link="base_link"/>
        <child link="gyro_link"/>
    </joint>
    <link name="gyro_link">
        <inertial>
            <mass value="0.001"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
        </inertial>
    </link>
    <locobot_cliff name="left" parent="${base_link_name}">
        <origin rpy="0 1.57079632679 0" xyz="0.08734 0.13601 0.0214"/>
    </locobot_cliff>
    <locobot_cliff name="right" parent="${base_link_name}">
        <origin rpy="0 1.57079632679 0" xyz="0.085 -0.13601 0.0214"/>
    </locobot_cliff>
    <locobot_cliff name="front" parent="${base_link_name}">
        <origin rpy="0 1.57079632679 0" xyz="0.156 0.00 0.0214"/>
    </locobot_cliff>

    <!-- plates  -->
    <link name="plate_1">
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="0.640128902693298"/>
            <inertia ixx="0.0212697824374231" ixy="-1.84819421839641E-07" ixz="0.00177278831625861" iyy="0.0200161122874848" iyz="1.82514218153984E-07" izz="0.00538401325307411"/>
        </inertial>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://locobot_description/meshes/plate.STL"/>
            </geometry>
            <material name="">
                <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1"/>
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://locobot_description/meshes/plate.STL"/>
            </geometry>
        </collision>
    </link>
    <joint name="plate_1_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0.0973 0 0.0902375"/>
        <parent link="${base_link_name}"/>
        <child link="plate_1"/>
        <axis xyz="0 0 0"/>
    </joint>
    <link name="plate_2">
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="0.640128902693298"/>
            <inertia ixx="0.0212697824374231" ixy="-1.84819421839641E-07" ixz="0.00177278831625861" iyy="0.0200161122874848" iyz="1.82514218153984E-07" izz="0.00538401325307411"/>
        </inertial>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://locobot_description/meshes/plate.STL"/>
            </geometry>
            <material name="">
                <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1"/>
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://locobot_description/meshes/plate.STL"/>
            </geometry>
        </collision>
    </link>
    <joint name="plate_2_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0.0047625"/>
        <parent link="plate_1"/>
        <child link="plate_2"/>
        <axis xyz="0 0 0"/>
    </joint>

    <!-- add arm -->
    <locobot_arm name="arm" parent="plate_2">
        <origin rpy="0 0 0" xyz="0 0 0.001"/>
    </locobot_arm>

    <!-- need to add camera assembly -->
    <locobot_cam name="cam" parent="${base_link_name}">
        <origin rpy="0 0 0" xyz="-0.03751 0 0.1331"/>
    </locobot_cam>

    <!-- Gazebo Plugins -->
    <gazebo>
        <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
            <robotNamespace>/</robotNamespace>
            <legacyModeNS>true</legacyModeNS>
        </plugin>
    </gazebo>

    <gazebo reference="caster_front_link">
        <mu1>0.0</mu1>
        <mu2>0.0</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel>
    </gazebo>

    <gazebo reference="gyro_link">
        <sensor name="imu" type="imu">
            <always_on>true</always_on>
            <update_rate>50</update_rate>
            <visualize>false</visualize>
            <imu>
                <noise>
                    <type>gaussian</type>
                    <rate>
                        <mean>0.0</mean>
                        <stddev>0.00000196</stddev>
                        <!-- 0.25 x 0.25 (deg/s) -->
                        <bias_mean>0.0</bias_mean>
                        <bias_stddev>0.0</bias_stddev>
                    </rate>
                    <accel>
                        <!-- not used in the plugin and real robot, hence using tutorial values -->
                        <mean>0.0</mean>
                        <stddev>1.7e-2</stddev>
                        <bias_mean>0.1</bias_mean>
                        <bias_stddev>0.001</bias_stddev>
                    </accel>
                </noise>
            </imu>
        </sensor>
    </gazebo>

    <gazebo>
        <self_collide>true</self_collide>
    </gazebo>

<!--     <gazebo>
	    <plugin name="kobuki_controller" filename="libgazebo_ros_kobuki.so">
	      <publish_tf>1</publish_tf>
	      <publish_joint_states>0</publish_joint_states>
	      <left_wheel_joint_name>wheel_left_joint</left_wheel_joint_name>
	      <right_wheel_joint_name>wheel_right_joint</right_wheel_joint_name>
	      <wheel_separation>.230</wheel_separation>
	      <wheel_diameter>0.070</wheel_diameter>
	      <torque>1.0</torque>
	      <velocity_command_timeout>0.6</velocity_command_timeout>
	      <cliff_sensor_left_name>cliff_sensor_left</cliff_sensor_left_name>
	      <cliff_sensor_center_name>cliff_sensor_front</cliff_sensor_center_name>
	      <cliff_sensor_right_name>cliff_sensor_right</cliff_sensor_right_name>
	      <cliff_detection_threshold>0.04</cliff_detection_threshold>
	      <bumper_name>bumpers</bumper_name>
	      <robotNamespace>/base</robotNamespace>
        <imu_name>imu</imu_name>
	    </plugin>
	 </gazebo> -->

    <gazebo>  
         <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">   
             <alwaysOn>true</alwaysOn>  
             <legacyMode>false</legacyMode> 
            <updateRate>40</updateRate> 
            <leftJoint>wheel_left_joint</leftJoint> 
            <rightJoint>wheel_right_joint</rightJoint>  
            <wheelSeparation>0.230</wheelSeparation>    
            <wheelDiameter>0.070</wheelDiameter>    
            <wheelTorque>1.0</wheelTorque>  
            <!--wheelAcceleration>${wheel_accel}</wheelAcceleration-->  
            <commandTopic>mobile_base/commands/velocity</commandTopic>  
            <odometryTopic>odom</odometryTopic> 
            <odometryFrame>odom</odometryFrame> 
            <robotBaseFrame>base_footprint</robotBaseFrame> 
            <publishWheelJointState>true</publishWheelJointState>
        </plugin>   
        <plugin filename="libgazebo_ros_p3d.so" name="p3d_base_controller"> 
            <alwaysOn>true</alwaysOn>   
            <updateRate>100.0</updateRate>  
            <bodyName>base_link</bodyName>  
            <topicName>base/absolute_position</topicName>   
            <gaussianNoise>0</gaussianNoise>    
            <frameName>map</frameName>  
            <xyzOffsets>0 0 0</xyzOffsets>  
            <rpyOffsets>0 0 0</rpyOffsets>  
            <!--<interface:position name="p3d_base_position"/>-->   
        </plugin>   
    </gazebo>


</robot>
